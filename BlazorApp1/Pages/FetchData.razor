@page "/fetchdata"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Entities.DTO;
@using System.Net.Http.Headers;

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id du calendrier</th>
                <th>Méthode de distribution</th>
                <th>Date de fin</th>
                <th>Nom</th>
                <th>Affichage</th>
                <th>Durée de RDV par défaut</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var campaing in campaigns)
            {
                <tr>
                    <td>@campaing.Id</td>
                    <td>@campaing.DistributionMethod</td>
                    <td>@campaing.End</td>
                    <td>@campaing.Name</td>
                    <td>@campaing.Prompt</td>
                    <td>@campaing.DefaultRdvDuration</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private List<CampaignDto> campaigns = new List<CampaignDto>(); 

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:51333/api/campaigns");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", await localStorage.GetItemAsStringAsync("idToken"));
        var response = await Http.SendAsync(request);
        campaigns = await response.Content.ReadFromJsonAsync<List<CampaignDto>>();
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
